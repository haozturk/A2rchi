name: PR Preview

on:
  workflow_dispatch: {}

concurrency:
  group: preview-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      A2RCHI_DIR: /home/runner/work/a2rchi-local
      HOME: /home/runner
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install a2rchi CLI
        run: |
          python -m pip install --upgrade pip
          pip install ".[all]" || pip install .

      - name: Prepare CI config
        shell: bash
        run: |
          mkdir -p configs/ci
          echo "Copying config file..."
          cp configs/pr_preview_config/pr_preview_config.yaml configs/ci/ci_config.yaml
          echo "Config copied successfully"
          ls -la configs/ci/

      - name: Create .env file for PG_PASSWORD with random password
        shell: bash
        run: |
          cat > .env << EOF
          PG_PASSWORD=$(openssl rand -base64 32)
          EOF

      - name: Create PR deployment
        id: create
        shell: bash
        run: |
          NAME="manual-${{ github.run_id }}"
          echo "name=$NAME" >> "$GITHUB_OUTPUT"
          echo "Creating deployment with name: $NAME"
          echo "Config file contents:"
          cat configs/ci/ci_config.yaml
          echo "Env file contents:"
          cat .env
          echo "Running a2rchi create command..."
          if a2rchi create --name "$NAME" --config configs/ci/ci_config.yaml -v 4 --services chatbot --env-file .env; then
            echo "a2rchi create succeeded"
          else
            echo "a2rchi create failed with exit code $?"
            echo "Checking if any containers were created..."
            docker ps -a
            exit 1
          fi

      - name: Find chat container
        id: container
        shell: bash
        run: |
          NAME="${{ steps.create.outputs.name }}"
          CHAT_CONTAINER=$(docker ps --format '{{.Names}}' | grep -E "^chat-${NAME}$|^chat-compops-${NAME}$|^chat-compops-a2rchi$") || true
          if [ -z "$CHAT_CONTAINER" ]; then
            echo "No chat container found. Listing containers:" >&2
            docker ps -a
            exit 1
          fi
          echo "name=$CHAT_CONTAINER" >> "$GITHUB_OUTPUT"

      - name: Wait for readiness
        shell: bash
        run: |
          CHAT_CONTAINER="${{ steps.container.outputs.name }}"
          echo "Waiting for service in $CHAT_CONTAINER to open port 7861"
          tries=0
          until docker exec "$CHAT_CONTAINER" bash -lc "ss -lnt | grep -q ':7861 '" || [ $tries -gt 90 ]; do
            tries=$((tries+1))
            sleep 2
          done
          if [ $tries -gt 90 ]; then
            echo "Service did not open port 7861 in time" >&2
            exit 1
          fi

      - name: Make smoke script executable
        run: chmod +x tests/smoke/smoke.sh

      - name: Run smoke tests
        env:
          BASE_URL: http://localhost:7861
        run: ./tests/smoke/smoke.sh "${{ steps.create.outputs.name }}"

      - name: Dump logs on failure
        if: failure()
        shell: bash
        run: |
          echo "Containers:"
          docker ps -a
          echo "==== Chat container logs (tail) ===="
          docker ps --format '{{.Names}}' | grep -E '^chat-|^chat-compops-' | xargs -I{} sh -c 'echo "---- {} ----"; docker logs --tail 500 {} || true'

      - name: Cleanup deployment
        if: always()
        run: |
          a2rchi delete --name "${{ steps.create.outputs.name }}" || true
